# Создать эмуляцию системы входа и регистрации для пользователей.
# При запуске программы, пользователя должно спросить проходил ли он регистрацию на нашем ресурсе,
# если да, тогда предложить ему ввести логин и пароль от его учетной записи.
# Если данные верны вывести сообщение об успешном входе в систему, если нет тогда сообщить об это.
# Если пользователь не регистрировался на ресурсе, тогда спросить не желает ли он пройти регистрацию.
# Если желает, взять от него необходимые данные и вывести об успешной регистрации, если не желает
# регистрироватся - пожелать удачи.
# Данные о зарегестрированных пользователях хранить в файле 'users.txt', по желанию можете создать
# файл для логирования событий регистрации и входа.

# info_users = open('users.txt', 'r')
#info_users.split(0)
# st_users = info_users.read()
# users = eval(st_users)

info_users = open('users.txt', 'w')
info_users.close()
users = {'admin': 1234}
print('Проходили ли вы регистрацию на нашем ресурсе ')
ansver = input('Если да напишите "y", если нет , напишите "n"')
yes = 'y'
no = 'n'

if ansver == yes :
    while True:
      log = input('Введите логин')
      password = input('Введите пароль')
      if log and password in users.items():
            print('доступ разрешен')
            break
      else:
            print('Вы не корректно ввели имя/пароль пользователя')
            continue
elif ansver == no:
    ansver2 = input('Желаете пройти регистрацию? \n'
          'Если да, напишите "y", если нет , напишите "n"')
    if ansver2 == yes:
        new_log = input('Введите логин')
        new_password = input('Введите пароль')
        user_new = {new_log : new_password}
        users.update(user_new)
        with open("users.txt", "w") as info_users :
            info_users.write(str(users))
        print('Пользователь успешно зарегистрирован')
    else:
        print('Удачи вам')


